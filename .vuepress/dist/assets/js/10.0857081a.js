(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{63:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"为了爱与和平"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为了爱与和平","aria-hidden":"true"}},[t._v("#")]),t._v(" 为了爱与和平")]),s("h2",{attrs:{id:"序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#序","aria-hidden":"true"}},[t._v("#")]),t._v(" 序")]),s("p",[t._v("一个好的程序员肯定是要能书写可维护的代码，而不是一次性的代码，怎么能让团队当中其他人甚至一段时间时候你再看你某个时候写的代码也能看懂呢，这就需要规范你的代码了。我是有一点强迫症或者叫代码洁癖的人。一个人维护的项目无所谓,如果是一个团队必须遵循规范。")]),s("h2",{attrs:{id:"程序员都有自己的开发习惯"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#程序员都有自己的开发习惯","aria-hidden":"true"}},[t._v("#")]),t._v(" 程序员都有自己的开发习惯")]),s("p",[t._v("任何人（甚至小动物）都有自己的做某件事情的习惯，而对于开发而言，所谓的标准规范，其实就是程序员对自身的要求，和对团队的融入，效率，质量是每个团队的追求。　　简述：要自己写的代码，别人容易看懂！　　如果使用其他系统或其他人早已定义好的变量、类、函数名时，需遵循它们原本的形式，避免出现问题。")]),s("h2",{attrs:{id:"编程风格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编程风格","aria-hidden":"true"}},[t._v("#")]),t._v(" 编程风格")]),s("p",[t._v('所谓 "编程风格"（programming style），指的是编写代码的样式规则。不同的程序员，往往有不同的编程风格。有人说，编译器的规范叫做"语法规则"（grammar），这是程序员必须遵守的；而编译器忽略的部分，就叫"编程风格"（programming style），这是程序员可以自由选择的。这种说法不完全正确，程序员固然可以自由选择编程风格，但是好的编程风格有助于写出质量更高、错误更少、更易于维护的程序。所以，有一点应该明确 ，"编程风格"的选择不应该基于个人爱好、熟悉程度、打字工作量等因素，而要考虑如何尽量使代码清晰易读、减少出错。你选择的，不是你喜欢的风格，而是一种能够清晰表达你的意图的风格。')]),s("h2",{attrs:{id:"规范目的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#规范目的","aria-hidden":"true"}},[t._v("#")]),t._v(" 规范目的")]),s("p",[t._v("为提高团队协作效率, 便于后台人员添加功能及前端后期优化维护, 输出高质量的文档, 特制订此文档。本规范文档一经确认, 前端开发人员必须按本文档规范进行前台页面开发。本文档如有不对或者不合适的地方请及时提出, 经讨论决定后方可更改。")]),s("blockquote",[s("p",[t._v("1、程序员可以了解任何代码，弄清程序的状况；")])]),s("blockquote",[s("p",[t._v("2、新人可以很快的适应环境；")])]),s("blockquote",[s("p",[t._v("3、防止新人出于节省时间的需要，自创一套风格并养成终生的习惯；")])]),s("blockquote",[s("p",[t._v("4、防止新人一次次的犯同样的错误；")])]),s("blockquote",[s("p",[t._v("5、在一致的环境下，人们可以减少犯错的机会；")])]),s("blockquote",[s("p",[t._v("6、程序员们有了一致的敌人；")])]),s("h2",{attrs:{id:"基本准则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本准则","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本准则")]),s("p",[t._v("保证开发的有效性和合理性，并可最大程度的提高程序代码的可读性和可重复利用性。符合 web 标准, 语义化 html, 结构表现行为分离, 兼容性优良. 页面性能方面, 代码要求简洁明了有序, 尽可能的减小服务器负载, 保证最快的解析速度。")]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token function"}},[t._v("data")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{attrs:{class:"highlighted-line"}},[t._v("      msg"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'For love and peace!'")])]),t._v("    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])}],!1,null,null,null);a.default=e.exports}}]);